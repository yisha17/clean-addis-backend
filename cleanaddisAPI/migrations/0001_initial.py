# Generated by Django 3.2.12 on 2022-06-04 20:01

import cleanaddisAPI.models
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(default='', max_length=20, unique=True)),
                ('email', models.EmailField(default='', max_length=30)),
                ('role', models.CharField(choices=[('Qorale', 'Qorale'), ('Garbage Collector', 'Garbage Collector'), ('City Admin', 'City Admin'), ('Resident', 'Resident')], default='Resident', max_length=20, null=True)),
                ('profile', models.ImageField(null=True, upload_to=cleanaddisAPI.models.upload_to)),
                ('phone', models.CharField(max_length=20, null=True)),
                ('device_id', models.CharField(default='', max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subcity', models.CharField(choices=[('Addis Ketema', 'AK'), ('Bole', 'Bole'), ('Nifas Silk', 'NS'), ('Kolfe', 'Kolfe')], default='B', max_length=20)),
                ('woreda', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isSeen', models.BooleanField(default=False)),
                ('notificationtype', models.CharField(max_length=10)),
                ('user', models.IntegerField()),
                ('point_to', models.IntegerField()),
                ('post_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PublicPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placeName', models.CharField(default='', max_length=120, null=True)),
                ('placeType', models.CharField(choices=[('Toilet', 'Toilet'), ('Park', 'Park')], max_length=120)),
                ('rating', models.IntegerField(null=True)),
                ('longitude', models.DecimalField(decimal_places=10, max_digits=14, unique=True)),
                ('latitude', models.DecimalField(decimal_places=10, max_digits=14, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Seminar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seminarTitle', models.CharField(default='', max_length=20, null=True)),
                ('seminarType', models.CharField(choices=[('Meeting', 'Meeting'), ('Plantation', 'Plantation'), ('Cleaning', 'Cleaning')], max_length=20)),
                ('link', models.CharField(default='', max_length=200)),
                ('fromDate', models.DateTimeField(auto_now_add=True)),
                ('toDate', models.DateField(null=True)),
                ('isExpired', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='WorkSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('hour', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Waste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('waste_name', models.CharField(max_length=20)),
                ('waste_type', models.CharField(choices=[('Plastic', 'Plastic'), ('Organic', 'Organic'), ('Metal', 'Metal'), ('Aluminium', 'Almuinium'), ('Paper', 'Paper'), ('E-waste', 'E-waste'), ('Glass', 'Glass'), ('Fabric', 'Fabric')], max_length=20)),
                ('for_waste', models.CharField(choices=[('Sell', 'Sell'), ('Donation', 'Donation')], max_length=10)),
                ('price_per_unit', models.IntegerField(null=True)),
                ('quantity', models.IntegerField(null=True)),
                ('metric', models.CharField(max_length=20, null=True)),
                ('image', models.ImageField(null=True, upload_to=cleanaddisAPI.models.upload_to)),
                ('loaction', models.CharField(max_length=30, null=True)),
                ('sold', models.BooleanField(null=True)),
                ('bought', models.BooleanField(null=True)),
                ('donated', models.BooleanField(null=True)),
                ('description', models.CharField(max_length=200, null=True)),
                ('post_date', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='buyer', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reportTitle', models.CharField(default='', max_length=120, null=True)),
                ('reportDescription', models.CharField(default='', max_length=320, null=True)),
                ('isResolved', models.BooleanField(default=False)),
                ('image', models.ImageField(null=True, upload_to=cleanaddisAPI.models.upload_to)),
                ('longitude', models.DecimalField(decimal_places=10, max_digits=12)),
                ('latitude', models.DecimalField(decimal_places=10, max_digits=12)),
                ('post_date', models.DateTimeField(auto_now_add=True)),
                ('reportedBy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=20)),
                ('company_email', models.EmailField(max_length=30)),
                ('password', models.CharField(max_length=20)),
                ('role', models.CharField(max_length=20)),
                ('logo', models.ImageField(null=True, upload_to='')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cleanaddisAPI.address')),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notificationTitle', models.CharField(default='', max_length=20, null=True)),
                ('notificationDescription', models.CharField(default='', max_length=20, null=True)),
                ('formDate', models.DateField(null=True)),
                ('toDate', models.DateField(null=True)),
                ('published', models.DateField(null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
